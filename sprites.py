from constant import Direction

class Apple:
    def apple():
        return """                                        
                        #0e5            
        #f04#f04#f04#0e5#f04#f04        
    #f04#ffe#f7a#f04#f04#f04#f04#b04    
    #f04#f7a#f04#f04#f04#f04#f04#b04    
    #f04#f04#f04#f04#f04#f04#f04#b04    
    #f04#f04#f04#f04#f04#f04#f04#b04    
        #b04#f04#f04#f04#f04#b04        
            #b04#b04#b04#b04            
                                        """

    def poison():
        return """                                        
                        #0e5            
        #6b7#6b7#6b7#0e5#6b7#6b7        
    #6b7#ffe#aba#6b7#6b7#6b7#6b7#474    
    #6b7#aba#6b7#6b7#6b7#6b7#6b7#474    
    #6b7#6b7#6b7#6b7#6b7#6b7#6b7#474    
    #6b7#6b7#6b7#6b7#6b7#6b7#6b7#474#8f0
    #8f0#474#6b7#6b7#6b7#6b7#474#8f0#8f0
    #8f0#8f0#474#474#474#474#8f0#6c0#6c0
        #8f0#8f0#8f0#8f0#8f0#8f0#6c0    """

    def golden():
        return """                                        
                        #0e5            
        #fd1#fd1#fd1#0e5#fd1#fd1        
    #fd1#ffe#fe9#fd1#fd1#fd1#fd1#db1    
    #fd1#fe9#fd1#fd1#fd1#fd1#fd1#db1    
    #fd1#fd1#fd1#fd1#fd1#fd1#fd1#db1    
    #fd1#fd1#fd1#fd1#fd1#fd1#fd1#db1    
        #db1#fd1#fd1#fd1#fd1#db1        
            #db1#db1#db1#db1            
                                        """

    def speed():
        return """                                        
                        #0e5            
        #f04#f04#f04#0e5#f04#b04        
    #f04#ffe#f7a#f04#f04#f04#f04#b04    
    #f04#f7a#f04#f04#f04#f04#f04#b04    
    #f04#f04#f04#f04#f04#0ff#f04#b04    
    #f04#f04#f04#f04#f04#0ff#0ff#b04    
        #f04#0ff#0ff#0ff#0ff#0ff#0bc    
            #b04#b04#b04#0ff#0bc        
                        #0bc            """
    def shrink():
        return """                                        
                        #0e5            
        #b04#b04#b04#0e5#b04#b04        
        #fc4#f04#f04#f04#f04#fc4#fd6    
    #fd6#fd6#fc4#f04#f04#fc4#fd6#fd6    
    #fd6#fd6#fc4#f04#f04#fc4#fd6#fd6    
    #fd6#fd6#f04#f04#f04#fc4#fd6#fd6    
        #b04#f04#f04#f04#f04#fc4        
            #b04#b04#b04#b04            
                                        """
    def block():
        return """                                        
    #b04#b04#b04#b04#b04#0e5#b04#b04    
    #b04#f04#f04#f04#0e5#f04#f04#b04    
    #b04#ffe#f7a#f04#f04#f04#f04#b04    
    #b04#f7a#f04#f04#f04#f04#f04#b04    
    #b04#f04#f04#f04#f04#f04#f04#b04    
    #b04#f04#f04#f04#f04#f04#f04#b04    
    #b04#f04#f04#f04#f04#f04#f04#b04    
    #b04#b04#b04#b04#b04#b04#b04#b04    
                                        """
    def chrono():
        return """                                        
                        #0e5            
        #f04#f04#f04#0e5#f04#b04        
    #f04#ffe#f7a#f04#f04#f04#f04#b04    
    #f04#f7a#f04#f04#000#000#000#000    
    #f04#f04#f04#000#fff#fff#fff#000#000
    #f04#f04#f04#000#fff#fff#000#fff#000
        #f04#f04#000#fff#fff#000#000#000
            #b04#000#fff#fff#fff#fff#000
                    #000#000#000#000    """

class Body:
    def vertical():
        return """    #300#732#943#943#943#943#732#300    
    #300#732#943#943#943#943#732#300    
    #300#843#a64#a64#a64#a64#843#300    
    #300#843#a64#a64#a64#a64#843#300    
    #300#732#943#943#943#943#732#300    
    #300#732#943#943#943#943#732#300    
    #300#843#a64#a64#a64#a64#843#300    
    #300#843#a64#a64#a64#a64#843#300    
    #300#732#943#943#943#943#732#300    
    #300#732#943#943#943#943#732#300    """
    def horizontal():
        return """                                        
#300#300#300#300#300#300#300#300#300#300
#732#732#843#843#732#732#843#843#732#732
#943#943#a64#a64#943#943#a64#a64#943#943
#943#943#a64#a64#943#943#a64#a64#943#943
#943#943#a64#a64#943#943#a64#a64#943#943
#943#943#a64#a64#943#943#a64#a64#943#943
#732#732#843#843#732#732#843#843#732#732
#300#300#300#300#300#300#300#300#300#300
                                        """
    def top_left_corner():
        return """
                #300#300#300#300#300#300
            #300#732#732#843#843#732#732
        #300#843#943#943#a64#a64#a64#943
    #300#732#943#943#943#943#a64#a64#943
    #300#732#943#943#943#943#a64#a64#943
    #300#843#a64#943#943#943#943#a64#943
    #300#843#a64#a64#a64#943#943#a64#843
    #300#732#a64#a64#a64#a64#a64#732#300
    #300#732#943#943#943#943#843#300    """
    def top_right_corner():
        return """
    #300#300#300#300#300#300            
    #732#732#843#843#732#732#300        
    #943#a64#a64#a64#943#943#843#300    
    #943#a64#a64#943#943#943#943#732#300
    #943#a64#a64#943#943#943#943#732#300
    #943#a64#943#943#943#943#a64#843#300
    #843#a64#943#943#a64#a64#a64#843#300
    #300#732#a64#a64#a64#a64#a64#732#300
        #300#843#943#943#943#943#732#300"""
    def bottom_left_corner():
        return """    #300#732#943#943#943#943#843#300    
    #300#732#a64#a64#a64#a64#a64#732#300
    #300#843#a64#a64#a64#943#943#a64#843
    #300#843#a64#943#943#943#943#a64#943
    #300#732#943#943#943#943#a64#a64#943
    #300#732#943#943#943#943#a64#a64#943
        #300#843#943#943#a64#a64#a64#943
            #300#732#732#843#843#732#732
                #300#300#300#300#300#300"""
    def bottom_right_corner():
        return """        #300#843#943#943#943#943#732#300
    #300#732#a64#a64#a64#a64#a64#732#300
    #843#a64#943#943#a64#a64#a64#843#300
    #943#a64#943#943#943#943#a64#843#300
    #943#a64#a64#943#943#943#943#732#300
    #943#a64#a64#943#943#943#943#732#300
    #943#a64#a64#a64#943#943#843#300    
    #732#732#843#843#732#732#300        
    #300#300#300#300#300#300            """

    def get_body(direction):
        if direction == Direction["LEFT"]:
            return Body.horizontal()
        elif direction == Direction["RIGHT"]:
            return Body.right_head()
        elif direction == Direction["UP"]:
            return Body.vertical()
        elif direction == Direction["DOWN"]:
            return Body.vertical()

class Player:

    def left_head():
        return """            #300#300#300#300#300        
        #300#512#512#512#512#732#300#300
    #300#512#723#723#723#723#512#732#732
#300#512#723#d94#d94#723#723#723#512#943
#300#512#723#723#723#723#723#723#723#512
#300#512#723#723#723#723#723#723#723#512
#300#512#723#d94#d94#723#723#723#512#943
    #300#512#723#723#723#723#512#732#732
        #300#512#512#512#512#732#300#300
            #300#300#300#300#300        """
    def right_head():
        return """        #300#300#300#300#300            
#300#300#732#512#512#512#512#300        
#732#732#512#723#723#723#723#512#300    
#943#512#723#723#723#d94#d94#723#512#300
#512#723#723#723#723#723#723#723#512#300
#512#723#723#723#723#723#723#723#512#300
#943#512#723#723#723#d94#d94#723#512#300
#732#732#512#723#723#723#723#512#300    
#300#300#732#512#512#512#512#300        
        #300#300#300#300#300            """
    def top_head():
        return """            #300#300#300#300            
        #300#512#512#512#512#300        
    #300#512#723#723#723#723#512#300    
#300#512#723#d94#723#723#d94#723#512#300
#300#512#723#d94#723#723#d94#723#512#300
#300#512#723#723#723#723#723#723#512#300
#300#512#723#723#723#723#723#723#512#300
#300#732#512#723#723#723#723#512#732#300
    #300#732#512#723#723#512#732#300    
    #300#732#943#512#512#943#732#300    """
    def bottom_head():
        return """    #300#732#943#512#512#943#732#300    
    #300#732#512#723#723#512#732#300    
#300#732#512#723#723#723#723#512#732#300
#300#512#723#723#723#723#723#723#512#300
#300#512#723#723#723#723#723#723#512#300
#300#512#723#d94#723#723#d94#723#512#300
#300#512#723#d94#723#723#d94#723#512#300
    #300#512#723#723#723#723#512#300    
        #300#512#512#512#512#300        
            #300#300#300#300            """


def get_head(direction):
    if direction == Direction["LEFT"]:
        return Player.left_head()
    elif direction == Direction["RIGHT"]:
        return Player.right_head()
    elif direction == Direction["UP"]:
        return Player.top_head()
    elif direction == Direction["DOWN"]:
        return Player.bottom_head()

class Tail:

    def left_tail():
        return """
                #300#300#300#300#300#300
        #300#300#743#743#632#632#743#743
    #300#632#632#a64#a64#943#943#a64#a64
#300#743#943#943#a64#a64#943#943#a64#a64
#300#743#943#943#a64#a64#943#943#a64#a64
    #300#632#632#a64#a64#943#943#a64#a64
        #300#300#743#743#632#632#743#743
                #300#300#300#300#300#300
                                        """
    def right_tail():
        return """
#300#300#300#300#300#300                
#743#743#632#632#743#743#300#300        
#a64#a64#943#943#a64#a64#632#632#300    
#a64#a64#943#943#a64#a64#943#943#743#300
#a64#a64#943#943#a64#a64#943#943#743#300
#a64#a64#943#943#a64#a64#632#632#300    
#743#743#632#632#743#743#300#300        
#300#300#300#300#300#300                
                                        """
    def top_tail():
        return """                #300#300                
            #300#743#743#300            
        #300#632#943#943#632#300        
        #300#632#943#943#632#300        
    #300#743#a64#a64#a64#a64#743#300    
    #300#743#a64#a64#a64#a64#743#300    
    #300#632#943#943#943#943#632#300    
    #300#632#943#943#943#943#632#300    
    #300#743#a64#a64#a64#a64#743#300    
    #300#743#a64#a64#a64#a64#743#300    """
    def bottom_tail():
        return """    #300#743#a64#a64#a64#a64#743#300    
    #300#743#a64#a64#a64#a64#743#300    
    #300#632#943#943#943#943#632#300    
    #300#632#943#943#943#943#632#300    
    #300#743#a64#a64#a64#a64#743#300    
    #300#743#a64#a64#a64#a64#743#300    
        #300#632#943#943#632#300        
        #300#632#943#943#632#300        
            #300#743#743#300            
                #300#300                """

                
    def get_tail(direction):
        if direction == Direction["LEFT"]:
            return Tail.left_tail()
        elif direction == Direction["RIGHT"]:
            return Tail.right_tail()
        elif direction == Direction["UP"]:
            return Tail.top_tail()
        elif direction == Direction["DOWN"]:
            return Tail.bottom_tail()

class Wall:
    def wall():
        return """#09a#09a#09a#09a#09a#09a#09a#09a#09a#09a
#09a#0cd#0cd#0cd#0cd#0cd#0cd#0cd#0cd#09a
#09a#0cd#0cd#09a#0cd#0cd#09a#0cd#0cd#09a
#09a#0cd#09a#0cd#0cd#09a#0cd#0cd#0cd#09a
#09a#0cd#0cd#0cd#09a#0cd#0cd#09a#0cd#09a
#09a#0cd#0cd#09a#0cd#0cd#09a#0cd#0cd#09a
#09a#0cd#09a#0cd#0cd#09a#0cd#0cd#0cd#09a
#09a#0cd#0cd#0cd#09a#0cd#0cd#09a#0cd#09a
#09a#0cd#0cd#0cd#0cd#0cd#0cd#0cd#0cd#09a
#09a#09a#09a#09a#09a#09a#09a#09a#09a#09a"""

class Portal:
    def blue():
        return """            #1ef#1ef#1ef#1ef            
        #1ef#147#147#147#147#1ef        
    #1ef#147                #147#1ef    
#1ef#147                        #147#1ef
#1ef#147                        #147#1ef
#1ef#147                        #147#1ef
#1ef#147                        #147#1ef
    #1ef#147                #147#1ef    
        #1ef#147#147#147#147#1ef        
            #1ef#1ef#1ef#1ef            """

    def orange():
        return """            #fe0#fe0#fe0#fe0            
        #fe0#f91#f91#f91#f91#fe0        
    #fe0#f91                #f91#fe0    
#fe0#f91                        #f91#fe0
#fe0#f91                        #f91#fe0
#fe0#f91                        #f91#fe0
#fe0#f91                        #f91#fe0
    #fe0#f91                #f91#fe0    
        #fe0#f91#f91#f91#f91#fe0        
            #fe0#fe0#fe0#fe0            """